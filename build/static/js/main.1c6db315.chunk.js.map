{"version":3,"sources":["Helpers/Contexts.js","Components/MainMenu.js","Helpers/QuestionBank.js","Components/Quiz.js","Components/EndScreen.js","App.js","reportWebVitals.js","index.js"],"names":["QuizContext","createContext","MainMenu","useContext","setGameState","gameState","className","onClick","Questions","prompt","optionA","optionB","optionC","optionD","answer","Quiz","score","setScore","useState","currentQuestion","setCurrentQuestion","optionChosen","setOptionChosen","length","EndScreen","App","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c6db315.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst QuizContext = createContext();\r\n\r\nexport default QuizContext","import React, { useContext } from 'react'\r\nimport QuizContext from '../Helpers/Contexts';\r\nimport '../App.css';\r\n\r\nfunction MainMenu() {\r\n    const {gameState, setGameState} = useContext(QuizContext)\r\n    return (\r\n        <div className=\"mainMenu\">\r\n            <button onClick={() => {setGameState(\"quiz\")}}>Start Quiz</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainMenu\r\n","export const Questions = [\r\n    {\r\n        prompt: \"Which is the capital of India?\",\r\n        optionA: \"Kolkata\",\r\n        optionB: \"Banglore\",\r\n        optionC: \"New Delhi\",\r\n        optionD: \"Mumbai\",\r\n        answer: \"C\"\r\n    },\r\n    {\r\n        prompt: \"Thanos is a comic character which is related to:\",\r\n        optionA: \"DC Comics\",\r\n        optionB: \"Marvel Cimematic Universe\",\r\n        optionC: \"Walt Disney\",\r\n        optionD: \"None of these\",\r\n        answer: \"B\"\r\n    },\r\n    {\r\n        prompt: \"Who was the second Prime Minister of India?\",\r\n        optionA: \"Jawaharlal Nehru\",\r\n        optionB: \"Dr Rajaendra Prasad\",\r\n        optionC: \"Sardar Vallabh Bhai Patel\",\r\n        optionD: \"Lal Bahadur Shastri\",\r\n        answer: \"D\"\r\n    },\r\n    {\r\n        prompt: \"Hydrogen bomb is works on the principle of\",\r\n        optionA: \"Nuclear Fusion\",\r\n        optionB: \"Beta decay\",\r\n        optionC: \"Alpha decay\",\r\n        optionD: \"Nuclear Fision\",\r\n        answer: \"A\"\r\n    },\r\n    {\r\n        prompt: \"What is the virus called which causes the COVID-19\",\r\n        optionA: \"MERS-Cov\",\r\n        optionB: \"SARS-Cov-2\",\r\n        optionC: \"SARS-Cov-1\",\r\n        optionD: \"Ebola\",\r\n        answer: \"B\"\r\n    }\r\n]","import React, { useState, useContext } from 'react';\r\nimport '../App.css';\r\nimport { Questions } from '../Helpers/QuestionBank';\r\nimport QuizContext from '../Helpers/Contexts';\r\n\r\nfunction Quiz() {\r\n    const { score, setScore, setGameState } = useContext(QuizContext);\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [optionChosen, setOptionChosen] = useState(\"\");\r\n\r\n    const nextQuestion = () => {\r\n        if(Questions[currentQuestion].answer === optionChosen){\r\n            setScore(score + 1);\r\n        }\r\n        setCurrentQuestion(currentQuestion + 1);\r\n    }\r\n\r\n    const finishQuiz = () => {\r\n        if(Questions[currentQuestion].answer === optionChosen){\r\n            setScore(score + 1);\r\n        }\r\n        setGameState(\"endScreen\");\r\n    }\r\n\r\n    return (\r\n        <div className='quiz'>\r\n            <h1>{Questions[currentQuestion].prompt}</h1>\r\n            <div className=\"options\">\r\n                <button onClick={() => setOptionChosen(\"A\")}>{Questions[currentQuestion].optionA}</button>\r\n                <button onClick={() => setOptionChosen(\"B\")}>{Questions[currentQuestion].optionB}</button>\r\n                <button onClick={() => setOptionChosen(\"C\")}>{Questions[currentQuestion].optionC}</button>\r\n                <button onClick={() => setOptionChosen(\"D\")}>{Questions[currentQuestion].optionD}</button>\r\n            </div>\r\n\r\n            {currentQuestion === Questions.length - 1 ? (\r\n                <button className=\"submit\" onClick={finishQuiz}>Submit</button>\r\n            ) : (\r\n                <button className=\"next\" onClick={nextQuestion}>Next Question</button>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quiz\r\n","import React, { useContext } from 'react'\r\nimport QuizContext from '../Helpers/Contexts';\r\nimport '../App.css';\r\nimport { Questions } from '../Helpers/QuestionBank';\r\n\r\nfunction EndScreen() {\r\n    const { score, setScore, setGameState } = useContext(QuizContext)\r\n\r\n    const restartQuiz = () => {\r\n        setScore(0);\r\n        setGameState(\"menu\")\r\n    }\r\n\r\n    return (\r\n        <div className='endScreen'>\r\n            <h1>Finished</h1>\r\n            <h3> {score} / {Questions.length} </h3>\r\n            <button onClick={restartQuiz}> Restart Quiz </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EndScreen\r\n","import React, { useState, useContext } from 'react';\nimport './App.css';\nimport MainMenu from './Components/MainMenu';\nimport Quiz from './Components/Quiz';\nimport EndScreen from './Components/EndScreen';\nimport QuizContext from './Helpers/Contexts';\n\nfunction App() {\n  const [gameState, setGameState] = useState(\"menu\");\n  const [score, setScore] = useState(0);\n\n  return (\n    <div className=\"App\">\n\n      <h1>Quiz Time</h1>\n\n      <QuizContext.Provider value={{gameState, setGameState, score, setScore}}>\n        {gameState === \"menu\" && <MainMenu/>}\n        {gameState === \"quiz\" && <Quiz/>}\n        {gameState === \"endScreen\" && <EndScreen/>}\n      </QuizContext.Provider>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}